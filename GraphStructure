class Graph(object):
    def __init__(self, name, edges, num_vertices, arcs, graph):
        self.instance_name = name
        self.num_vertices = num_vertices
        self.vertices = [i[0] for i in graph if i[0] <= n_vertices]
        self.edges = edges
        self.arcs = arcs 
        self.graph = graph

    def __str__(self):
        return self.graph.__str__()

    def __getitem__(self, indice):
        return self.graph[indice]

    def __next__(self):
        return self.graph.__next__()

    def __repr__(self):
        return "\n***\nname: %s\nn_vertices: %d ,n_edges: %d, n_arcs:%d \n%s\n" % (
            self.instance_name,
            self.num_vertices,
            self.edges,
            self.arcs,
            str(self.graph)
        )

    def __len__(self):
        return len(graph)

    def __format__(self, format_spec):
        return self.__str__()


def pipe(*args, params=[]):
    result = args[0](params)
    for func in args[1:]:
        result = func(result)
    return result


def tap(arg):
    print("{trace}\n{arg}\n{trace}".format(trace="="*80, arg=arg))
    return arg